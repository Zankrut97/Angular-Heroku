{"version":3,"sources":["./src/app/person/person-routing.module.ts","./src/app/person/services/person.service.ts","./src/app/shared/utilities/urls.ts","./src/app/person/components/person/person.component.ts","./src/app/person/components/person/person.component.html","./src/app/person/person.module.ts"],"names":[],"mappings":"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","file":"person-person-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PersonComponent } from './components/person/person.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PersonComponent },  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class PersonRoutingModule { }","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\nimport Url from 'src/app/shared/utilities/urls';\r\nimport { Person } from '../models/person';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  public getPerson(value: Number):Observable<any>{\r\n    return this.httpClient.get(`${Url.PERSON_API_ENDPOINT}${value}`);\r\n  }\r\n}\r\n","class Url{\r\n    static readonly PERSON_API_ENDPOINT:String = \"https://node-starwars-backend.herokuapp.com/redspace/api/people/\";\r\n}\r\n\r\nexport default Url;\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SearchBarComponent } from 'src/app/shared/components/search-bar/search-bar.component';\r\nimport { PersonList } from 'src/app/shared/utilities/personlist';\r\nimport { map } from 'rxjs/operators';\r\nimport { Person } from '../../models/person';\r\nimport { PersonService } from '../../services/person.service';\r\n\r\n@Component({\r\n  selector: 'app-person',\r\n  templateUrl: './person.component.html',\r\n  styleUrls: ['./person.component.scss']\r\n})\r\n\r\nexport class PersonComponent implements OnInit {\r\n\r\n  public searchType: string = \"Id\";\r\n  public personList!:PersonList[];\r\n  public personData!:Person;\r\n  public loading: boolean = false;\r\n  public error: boolean = false;\r\n\r\n  @ViewChild(SearchBarComponent) searchBar!: SearchBarComponent;\r\n\r\n  constructor(private personService: PersonService ) {\r\n    this.personList = [\r\n      {id:1,name:\"Luke Skywalker\"},\r\n      {id:2,name:\"C-3PO\"},\r\n      {id:3,name:\"R2-D2\"},\r\n      {id:4,name:\"Darth Vader\"},\r\n      {id:5,name:\"Leia Organa\"},\r\n      {id:6,name:\"Owen Lars\"},\r\n      {id:7,name:\"Beru Whitesun lars\"},\r\n      {id:8,name:\"R5-D4\"},\r\n      {id:9,name:\"Biggs Darklighter\"},\r\n      {id:10,name:\"Obi-Wan Kenobi\"},\r\n      {id:11,name:\"Anakin Skywalker\"},\r\n      {id:12,name:\"Wilhuff Tarkin\"},\r\n    ];\r\n  }\r\n  \r\n  ngOnInit(): void {}\r\n\r\n  public search(){\r\n    const personId =  this.searchBar.getSearchValue();\r\n\r\n    if(personId) {\r\n      this.loading = true;\r\n      this.error = false;\r\n\r\n      this.personService.getPerson(personId)\r\n      .pipe(\r\n        map(response => response.data)\r\n      )\r\n      .subscribe(\r\n        (response: Person) => {\r\n          this.personData = response;\r\n          this.loading = false;\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          this.error = true;\r\n          this.loading = false;\r\n        }\r\n      );\r\n    }  \r\n  }\r\n\r\n  public searchByType(type: string) {\r\n    this.searchType = type;\r\n\r\n    if(type === 'Name'){\r\n      this.searchBar.inputSelected = undefined;    \r\n      this.searchBar.populatePersonList(this.personList);\r\n      this.searchBar.toggleInputBound(true); \r\n    } else if (type === 'Id'){\r\n      this.searchBar.inputSelected = undefined;\r\n      this.searchBar.toggleInputBound(false);\r\n    }\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <div class=\"search-container\">\r\n        <div class=\"btn-group\">\r\n            <button type=\"button\" class=\"btn btn-info dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                {{searchType}}\r\n            </button>\r\n            <div class=\"dropdown-menu\">\r\n              <a class=\"dropdown-item\" (click)=\"searchByType('Name')\">Search By Name</a>\r\n              <a class=\"dropdown-item\" (click)=\"searchByType('Id')\">Search By ID</a>\r\n            </div>\r\n        </div>\r\n        <app-search-bar class=\"search-bar\"></app-search-bar> \r\n        \r\n        <button class=\"btn btn-success my-2 my-sm-0\" (click)=\"search()\">Search</button>\r\n    </div>\r\n\r\n    <div *ngIf=\"loading\" style=\"position: absolute; top:50%; left: 50%;\">\r\n      <img class=\"loading\" src=\"/assets/light-saber.svg\" width=\"80\" height=\"80\"/>\r\n      <p style=\"margin-top:15px;text-align: center; font-family: 'Pacifica',cursive; font-size: large; font-weight: 300;\">Fetching...</p>\r\n    </div>\r\n\r\n    <div *ngIf=\"!loading\">\r\n      <div *ngIf=\"error\">\r\n        <div style=\"position: absolute; top:40%; left: 40%;\" *ngIf=\"error\">\r\n          <img src=\"/assets/404.png\" width=\"280\"/>\r\n          <p style=\"text-align: center; font-family: 'Pacifica',cursive; font-size: x-large; font-weight: 300;\">Enter Valid Id</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"!error\">\r\n        <div *ngIf=\"personData\">\r\n          <app-datagrid [personData]=\"personData\"></app-datagrid>\r\n        </div>\r\n\r\n        <div style=\"position: absolute; top:40%; left: 40%;\" *ngIf=\"!personData\">\r\n          <img src=\"/assets/search-img.svg\" width=\"280\"/>\r\n          <p style=\"text-align: center; font-family: 'Pacifica',cursive; font-size: large; font-weight: 300;\">Search StarWars Characters</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PersonComponent } from './components/person/person.component';\r\nimport { PersonRoutingModule } from './person-routing.module';\r\nimport { DatagridComponent } from '../shared/components/datagrid/datagrid.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PersonComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    PersonRoutingModule\r\n  ]\r\n})\r\nexport class PersonModule { }\r\n"],"sourceRoot":"webpack:///"}